---

# install the cerebro tool for elasticsearch management

# Configure user and group
- name: Configuring user and group
  group: name={{ cerebro_group }}

- user: >
      name={{ cerebro_user }}
      group={{ cerebro_group }}
      createhome=no

- name: Download cerebro
  get_url: >
      url="{{ cerebro_repo_url }}/v{{ cerebro_version }}/cerebro-{{ cerebro_version}}.tgz"
      dest="/tmp/cerebro-{{ cerebro_version }}.tgz"
      validate_certs={{ validate_apt_certificates }}
  ignore_errors: no
  environment: "{{ proxy_env }}"


- name: delete path if exists
  file: >
     path="{{ cerebro_home_dir }}"
     state=absent
     recurse=no
  ignore_errors: yes


- name: Create cerebro folder
  file: >
    path="{{ cerebro_home_dir }}"
    state=directory
    owner="{{ cerebro_user }}"
    group="{{ cerebro_group }}"
    recurse=yes


- name: Extract tarball
  unarchive:
    extra_opts: ['--strip-components=1', '--show-stored-names']
    remote_src: yes
    src: "/tmp/cerebro-{{ cerebro_version }}.tgz"
    dest: "{{ cerebro_home_dir }}/"
  notify: restart cerebro


- name: Template out the configuration
  template: >
    src="application.conf.j2"
    dest="{{ cerebro_home_dir }}/conf/application.conf"
    owner="{{ cerebro_user }}"
    group="{{ cerebro_group }}"
    mode=0644
  notify: restart cerebro


# Configure directories
- name: Configuring Log directory
  file: >
    path="{{ cerebro_log_dir }}"
    state=directory
    owner="{{ cerebro_user }}"
    group="{{ cerebro_group }}"
    recurse=yes
  when: cerebro_log_dir is defined


# for init only
- name: Template cerebro init.d script
  template: >
    src="etc/init.d/cerebro.j2"
    dest="/etc/init.d/cerebro"
    owner=root
    group=root
    mode=0755
  notify: restart cerebro


# # for systemd
# - name: Template out the service file
#   template: >
#     src=cerebro_systemd_service.j2
#     dest=/etc/systemd/system/cerebro.service
#     owner=root
#     group=root
#     mode=0755
#   notify: restart cerebro


# remove archive
- name: Cleanup archive
  file: >
    path="/tmp/cerebro-{{ cerebro_version }}.tgz"
    state=absent


# Register Elasticsearch service to start on boot
- name: Ensure Cerebro is started on boot
  service: >
    name=cerebro
    enabled="{{ cerebro_service_startonboot }}"
    state="{{ cerebro_service_state }}"

- meta: flush_handlers
