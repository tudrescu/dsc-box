# Settings file in YAML
#
# Settings can be specified either in hierarchical form, e.g.:
#
#   pipeline:
#     batch:
#       size: 125
#       delay: 5
#
# Or as flat keys:
#
#   pipeline.batch.size: 125
#   pipeline.batch.delay: 5
#
# ---------------------------  Node identity -----------------------------------
#
# Use a descriptive name for the node:
#
# node.name: test
{% if logstash_node_name is defined %}
node.name: {{ logstash_node_name }}
{% endif %}
#
# If omitted the node name will default to the machine's host name

# ---------------------------- Data path ---------------------------------------
#
# Which directory should be used by logstash and its plugins
# for any persistent needs. Defaults to LOGSTASH_HOME/data
#
{% if logstash_path_data is defined %}
path.data: {{ logstash_path_data }}
{% else %}
path.data: /var/lib/logstash
{% endif %}

# ------------------------- Pipeline Settings ----------------------------------
#
# Set the number of workers that will, in parallel, execute the filters+outputs
# stage of the pipeline.
#
# This defaults to the number of the host's CPU cores.
#
# pipeline.workers: 2
{% if logstash_pipeline_workers is defined %}
pipeline.workers: {{ logstash_pipeline_workers }}
{% endif %}

# How many workers should be used per output plugin instance
#
# pipeline.output.workers: 1
{% if logstash_output_workers is defined %}
pipeline.output.workers: {{ logstash_output_workers }}
{% endif %}

# How many events to retrieve from inputs before sending to filters+workers
#
# pipeline.batch.size: 125
{% if pipeline_batch_size is defined %}
pipeline.batch.size: {{ pipeline_batch_size }}
{% endif %}

# How long to wait before dispatching an undersized batch to filters+workers
# Value is in milliseconds.
#
# pipeline.batch.delay: 5
{% if pipeline_batch_delay is defined %}
pipeline.batch.delay: {{ pipeline_batch_delay }}
{% endif %}

# Force Logstash to exit during shutdown even if there are still inflight
# events in memory. By default, logstash will refuse to quit until all
# received events have been pushed to the outputs.
#
# WARNING: enabling this can lead to data loss during shutdown
#
# pipeline.unsafe_shutdown: false
{% if pipeline_unsafe_shutdown is defined %}
pipeline.unsafe_shutdown: {{ pipeline_unsafe_shutdown }}
{% endif %}

# --------------------- Pipeline Configuration Settings ------------------------
#
# Where to fetch the pipeline configuration for the main pipeline
#
{% if logstash_path_config is defined %}
path.config: {{ logstash_path_config }}
{% else %}
path.config: /etc/logstash/conf.d
{% endif %}


# Pipeline configuration string for the main pipeline
#
# config.string:
#
# At startup, test if the configuration is valid and exit (dry run)
#
# config.test_and_exit: false
{% if config_test_and_exit is defined %}
config.test_and_exit: {{ config_test_and_exit }}
{% endif %}

# Periodically check if the configuration has changed and reload the pipeline
# This can also be triggered manually through the SIGHUP signal
#
# config.reload.automatic: false
{% if config_test_and_exit is defined %}
config.reload.automatic: {{ config_test_and_exit }}
{% endif %}

# How often to check if the pipeline configuration has changed (in seconds)
#
# config.reload.interval: 3
{% if config_reload_interval is defined %}
config.reload.interval: {{ config_reload_interval }}
{% endif %}

# Show fully compiled configuration as debug log message
# NOTE: --log.level must be 'debug'
#
# config.debug: false
#
# ---------------------------- Queuing Settings --------------------------------
#
# Internal queuing model, "memory" for legacy in-memory based queuing and
# "persisted" for disk-based acked queueing. Defaults is memory
#
# queue.type: memory
{% if queue_type is defined %}
queue.type: {{ queue_type }}
{% endif %}

# If using queue.type: persisted, the directory path where the data files will be stored.
# Default is path.data/queue
#
# path.queue:


# If using queue.type: persisted, the page data files size. The queue data consists of
# append-only data files separated into pages. Default is 250mb
#
# queue.page_capacity: 250mb
{% if queue_page_capacity is defined %}
queue.page_capacity: {{ queue_page_capacity }}
{% endif %}

# If using queue.type: persisted, the maximum number of unread events in the queue.
# Default is 0 (unlimited)
#
# queue.max_events: 0
{% if queue_max_events is defined %}
queue.max_events: {{ queue_max_events }}
{% endif %}

# If using queue.type: persisted, the total capacity of the queue in number of bytes.
# If you would like more unacked events to be buffered in Logstash, you can increase the
# capacity using this setting. Please make sure your disk drive has capacity greater than
# the size specified here. If both max_bytes and max_events are specified, Logstash will pick
# whichever criteria is reached first
# Default is 1024mb or 1gb
#
# queue.max_bytes: 1024mb
{% if queue_max_bytes is defined %}
queue.max_bytes: {{ queue_max_bytes }}
{% endif %}

# If using queue.type: persisted, the maximum number of acked events before forcing a checkpoint
# Default is 1024, 0 for unlimited
#
# queue.checkpoint.acks: 1024
{% if queue_checkpoint_acks is defined %}
queue.checkpoint.acks: {{ queue_checkpoint_acks }}
{% endif %}

# If using queue.type: persisted, the maximum number of written events before forcing a checkpoint
# Default is 1024, 0 for unlimited
#
# queue.checkpoint.writes: 1024
{% if queue_checkpoint_writes is defined %}
queue.checkpoint.writes: {{ queue_checkpoint_writes }}
{% endif %}

# If using queue.type: persisted, the interval in milliseconds when a checkpoint is forced on the head page
# Default is 1000, 0 for no periodic checkpoint.
#
# queue.checkpoint.interval: 1000
{% if queue_checkpoint_interval is defined %}
queue.checkpoint.interval: {{ queue_checkpoint_interval }}
{% endif %}

# ----------------------------- Metrics Settings -------------------------------
#
# Bind address for the metrics REST endpoint
#
# http.host: "127.0.0.1"
{% if logstash_http_host is defined %}
http.host: {{ logstash_http_host }}
{% endif %}

# Bind port for the metrics REST endpoint, this option also accept a range
# (9600-9700) and logstash will pick up the first available ports.
#
# http.port: 9600-9700
{% if logstash_http_port is defined %}
http.port: {{ logstash_http_port }}
{% endif %}

# ------------------------- Debugging Settings ---------------------------------
#
# Options for log.level:
#   * fatal
#   * error
#   * warn
#   * info (default)
#   * debug
#   * trace
#
# log.level: info

{% if logstash_path_logs is defined %}
path.logs: {{ logstash_path_logs }}
{% else %}
path.logs: /var/log/logstash
{% endif %}

#
# --------------------------- Other Settings -----------------------------------
#
# Where to find custom plugins
# path.plugins: []
{% if logstash_path_plugins is defined %}
path.plugins: [ {{ logstash_path_plugins }} ]
{% endif %}

#
# ------------------------------- X-Pack ---------------------------------------
#
{% if install_xpack %}
xpack.monitoring.elasticsearch.url: {{ xpack_monitoring_es_url }}
{% endif %}
